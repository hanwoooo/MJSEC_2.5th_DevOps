# server {
#     listen 80;
#     server_name _ hanwoo.mjsec.kr; # 실제 도메인 이름 적기.

#     # Flask 앱 컨테이너로 요청 전달
#     location / {
#         proxy_pass http://web:5000;

#         # 원본 요청 헤더 유지
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         # (옵션) WebSocket 이용 시 주석 해제
#         # proxy_http_version 1.1;
#         # proxy_set_header Upgrade $http_upgrade;
#         # proxy_set_header Connection "upgrade";
#     }
# }

# 1. HTTP (80) - 인증서 발급용 및 HTTPS 리다이렉션
server {
    listen 80;
    server_name newbie.mjsec.kr;  # 실제 도메인으로 변경

    # 인증서 갱신을 위한 HTTP-01 challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # 모든 요청을 HTTPS로 리디렉션
    location / {
        return 301 https://$host$request_uri;
    }
}

# 2. HTTPS (443) - 실제 서비스
server {
    listen 443 ssl;
    server_name newbie.mjsec.kr;  # 실제 도메인으로 변경

    # 인증서 경로 (docker-compose에서 마운트됨)
    ssl_certificate_key /etc/letsencrypt/live/hanwoo.mjsec.kr/privkey.pem;
    ssl_certificate /etc/letsencrypt/live/hanwoo.mjsec.kr/fullchain.pem;

    # 선택: TLS 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Flask 앱에 프록시
    location / {
        proxy_pass http://web:5000;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
